#!/bin/bash

PROGRAM_NAME=$(basename "$0")
PROGRAM_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
PROGRAM_VERSION="0.0.1"

#####################
# Include Utilities #
#####################
. "${PROGRAM_DIR}/utility"

####################
# Include Commands #
####################
COMMAND_DIR="${PROGRAM_DIR}/commands"
. "${COMMAND_DIR}/help"
VALID_COMMANDS=(dir init list start stop setup-aem setup-dispatcher profile)
for VALID_COMMAND in ${VALID_COMMANDS[@]}; do
    . "${COMMAND_DIR}/${VALID_COMMAND}"
done

################
# Main Program #
################
while getopts ":vh" opt; do
    case "${opt}" in
        v)
            echo "proj version ${PROGRAM_VERSION}"
            exit 0
            ;;
        \?)
            echo "Invalid option: -${OPTARG}" >&2
            exit 67
            ;;
        \:)
            echo "Option -${OPTARG} requires an argument." >&2
            exit 68
            ;;
    esac
done
shift $((OPTIND-1))

HAS_HELP_OPTION="n"
if [ "${1}" == "help" ]; then
    HAS_HELP_OPTION="y"
    shift
fi

COMMAND_NAMES=()
while [[ " ${VALID_COMMANDS[*]} " == *" ${1} "* ]]; do
    COMMAND_NAMES+=("${1}")
    shift
done

if [[ "${HAS_HELP_OPTION}" == "n" && ${#COMMAND_NAMES[@]} -ne 0 ]]; then
    for COMMAND_NAME in ${COMMAND_NAMES[@]}; do
        # TODO: Passing expanded arguments into command has issues with command parameters containing spaces.
        command_${COMMAND_NAME} $@ 2> /dev/null

        COMMAND_STATUS=$?
        if [ ${COMMAND_STATUS} -ne 0 ]; then
            exit ${COMMAND_STATUS}
        fi
    done
else
    command_help ${COMMAND_NAMES[@]}
fi
