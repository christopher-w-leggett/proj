#!/bin/bash

command_init(){
    local PROJ_NAME="${1}"

    if [[ -n "${PROJ_NAME}" && "" != "${PROJ_NAME}" ]]; then
        local PROJ_DIR=$(project_directory "${PROJ_NAME}")

        if [ ! -d "${PROJ_DIR}" ]; then
            printf "Creating ${PROJ_DIR}.\n"
            mkdir "${PROJ_DIR}"
            cp -r "${PROGRAM_DIR}/.proj" "${PROJ_DIR}/.proj"
            printf "Creating ${PROJ_DIR}/code.\n"
            mkdir "${PROJ_DIR}/code"
            printf "Creating ${PROJ_DIR}/dependencies.\n"
            mkdir "${PROJ_DIR}/dependencies"
            printf "Creating ${PROJ_DIR}/documents.\n"
            mkdir "${PROJ_DIR}/documents"

            printf "Project structure created at ${PROJ_DIR}.\n"
        else
            printf "The ${PROJ_NAME} project already exists at directory ${PROJ_DIR}.\n"
            return 80
        fi
    else
        printf "A project name is required to initialize the project directory.  Use '${PROGRAM_NAME} help init' for help with the init command.\n"
        return 64
    fi
}

command_init_help(){
    printf "USAGE\n"
    printf "   ${PROGRAM_NAME} init <project_name>\n"
    printf "\n"
    printf "DESCRIPTION\n"
    printf "   The 'init' command can be used to initialize a new project.  This command will setup a default directory structure for a new project.\n"
}

command_init_help_short(){
    printf "Initializes a project's directory structure.\n"
}
