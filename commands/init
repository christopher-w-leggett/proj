#!/bin/bash

_setup_aem(){
    local AEM_JAR_PATH=${1}
    local AEM_JAR_NAME=$(basename ${AEM_JAR_PATH})
    local PROJ_DIR=${2}

    # Gather AEM instance details
    echo "What type of AEM instance is this (author/publish)?"
    read INSTANCE_TYPE
    while [[ "author" != ${INSTANCE_TYPE} && "publish" != ${INSTANCE_TYPE} ]]; do
        echo "I didn't quite get that.  What type of AEM instance is this (author/publish)?"
        read INSTANCE_TYPE
    done
    if [ -d ${PROJ_DIR}/sites/${INSTANCE_TYPE} ]; then
        echo "An ${INSTANCE_TYPE} AEM instance already exists."
        return 64
    fi

    local RUNMODES=${INSTANCE_TYPE}
    echo "Enter any additional runmodes:"
    read ADDITIONAL_RUNMODES
    if [ "" != ${ADDITIONAL_RUNMODES} ]; then
        RUNMODES="${RUNMODES},${ADDITIONAL_RUNMODES}"
    fi

    echo "Would you like to include geometrixx content (y/n)?"
    read INCLUDE_GEOMETRIXX
    if [ "y" != ${INCLUDE_GEOMETRIXX} ]; then
        RUNMODES="${RUNMODES},nosamplecontent"
    fi

    local PORT="4502"
    local DEBUG_PORT="30303"
    if [ "publish" == ${INSTANCE_TYPE} ]; then
        PORT="4503"
        DEBUG_PORT="30304"
    fi

    echo "Enter the port [${PORT}]:"
    read USER_DEFINED_PORT
    if [ "" != ${USER_DEFINED_PORT} ]; then
        PORT=${USER_DEFINED_PORT}
    fi

    echo "Enter the debug port [${DEBUG_PORT}]:"
    read USER_DEFINED_DEBUG_PORT
    if [ "" != ${USER_DEFINED_DEBUG_PORT} ]; then
        DEBUG_PORT=${USER_DEFINED_DEBUG_PORT}
    fi

    if [ ! -d ${PROJ_DIR}/sites ]; then
        echo "Creating ${PROJ_DIR}/sites."
        mkdir ${PROJ_DIR}/sites
    fi
    local INSTALL_DIR=${PROJ_DIR}/sites/${INSTANCE_TYPE}
    if [ ! -d ${INSTALL_DIR} ]; then
        echo "Creating ${INSTALL_DIR}."
        mkdir ${INSTALL_DIR}
    fi

    echo "Copying ${AEM_JAR_PATH} to ${INSTALL_DIR}."
    cp ${AEM_JAR_PATH} ${INSTALL_DIR}

    local CURRENT_DIR=$(pwd)

    echo "Switching to ${INSTALL_DIR} to unpack jar."
    cd ${INSTALL_DIR}
    java -jar ${AEM_JAR_NAME} -unpack &> /dev/null

    echo "Jar unpacked, switching back to ${CURRENT_DIR}."
    cd ${CURRENT_DIR}

    sed -i "s/CQ_PORT=450[0-9]/CQ_PORT=${PORT}/g" ${INSTALL_DIR}/crx-quickstart/bin/start

    sed -i "s/CQ_RUNMODE='.*'/CQ_RUNMODE='${RUNMODES}'/g" ${INSTALL_DIR}/crx-quickstart/bin/start

    sed -i "s/CQ_JVM_OPTS='\(.*\)'/CQ_JVM_OPTS='\1 -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${DEBUG_PORT}'/g" ${INSTALL_DIR}/crx-quickstart/bin/start
}

command_init(){
    local PROJ_NAME=${1}

    if [[ -n ${PROJ_NAME} && "" != ${PROJ_NAME} ]]; then
        local PROJ_DIR=$(project_directory ${PROJ_NAME})

        if [ ! -d ${PROJ_DIR} ]; then
            echo "Creating ${PROJ_DIR}."
            mkdir ${PROJ_DIR}
            cp -r ${PROGRAM_DIR}/.proj ${PROJ_DIR}/.proj
            echo "Creating ${PROJ_DIR}/code."
            mkdir ${PROJ_DIR}/code
            echo "Creating ${PROJ_DIR}/dependencies."
            mkdir ${PROJ_DIR}/dependencies
            echo "Creating ${PROJ_DIR}/documents."
            mkdir ${PROJ_DIR}/documents

            echo "Project structure created at ${PROJ_DIR}.  Would you also like to setup AEM (y/n)?"
            read SETUP_AEM

            if [ "y" == ${SETUP_AEM} ]; then
                echo "Provide path to AEM jar:"
                read AEM_JAR_PATH

                if [[ "" != ${AEM_JAR_PATH} && -f ${AEM_JAR_PATH} ]]; then
                    while [ "y" == ${SETUP_AEM} ]; do
                        _setup_aem ${AEM_JAR_PATH} ${PROJ_DIR}

                        echo "Would you like to setup another AEM instance (y/n)?"
                        read SETUP_AEM
                    done
                else
                    echo "No AEM jar provided, skipping AEM setup."
                fi
            fi
        else
            echo "The ${PROJ_NAME} project already exists in directory ${PROJ_DIR}."
        fi
    else
        echo "A project name is required to initialize the project directory.  Use '${PROGRAM_NAME} help init' for help with the init command."
    fi
}

