#!/bin/bash

command_alias(){
    #retrieve first argument and verify "list", "set" or "delete" has been provided.
    local ACTION="${1}"
    local PROJ_NAME="${2}"
    local ALIAS="${3}"
    shift 3

    if [[ -n "${PROJ_NAME}" && "" != "${PROJ_NAME}" ]]; then
        local PROJ_DIR=$(project_directory "${PROJ_NAME}")

        if [ -d "${PROJ_DIR}" ]; then
            local HIDDEN_PROJ_DIR="${PROJ_DIR}/.proj"
            local ALIAS_FILE="${HIDDEN_PROJ_DIR}/aliases"

            if [ "list" == "${ACTION}" ]; then
                if [[ -f "${ALIAS_FILE}" ]]; then
                    local ALIAS_WRITTEN="n"
                    while read -r ALIAS_LINE || [[ -n "${ALIAS_LINE}" ]]; do
                        if [ "" != "${ALIAS_LINE}" ]; then
                            local ALIAS_NAME=$(printf "${ALIAS_LINE}" | awk -F= '{ st = index($0,"=");print substr($0,0,st-1)}')
                            local ALIASED_NAMES=($(printf "${ALIAS_LINE}" | awk -F= '{ st = index($0,"=");print substr($0,st+1)}'))

                            if [ "y" == "${ALIAS_WRITTEN}" ]; then
                                printf "\n"
                            fi

                            printf "${ALIAS_NAME}\n"
                            for ALIASED_NAME in "${ALIASED_NAMES[@]}"; do
                                printf " \`${ALIASED_NAME}\n"
                            done

                            ALIAS_WRITTEN="y"
                        fi
                    done < "${ALIAS_FILE}"

                    if [[ "n" == "${ALIAS_WRITTEN}" ]]; then
                        printf "No aliases defined.\n"
                    fi
                else
                    printf "No aliases defined.\n"
                fi
            elif [[ "set" == "${ACTION}" || "delete" == "${ACTION}" ]]; then
                if [[ "" != "${ALIAS}" ]]; then
                    if [ "set" == "${ACTION}" ]; then
                        #Ensure aliases file exists
                        if [ ! -f "${ALIAS_FILE}" ]; then
                            touch "${ALIAS_FILE}"
                        fi

                        #Gather aliases
                        local AEM_INSTANCE_NAMES="${1}"
                        shift
                        for AEM_INSTANCE_NAME in $@; do
                            AEM_INSTANCE_NAMES="${AEM_INSTANCE_NAMES} ${AEM_INSTANCE_NAME}"
                        done

                        #Add alias
                        if grep "${ALIAS}=" "${ALIAS_FILE}" >/dev/null; then
                            #Replace alias
                            sed -i '' -e "s/${ALIAS}=.*/${ALIAS}=${AEM_INSTANCE_NAMES}/g" "${ALIAS_FILE}"
                        else
                            #Append alias
                            printf "${ALIAS}=${AEM_INSTANCE_NAMES}\n" >> ${ALIAS_FILE}
                        fi
                    elif [ -f "${ALIAS_FILE}" ]; then
                        if grep "${ALIAS}=" "${ALIAS_FILE}" >/dev/null; then
                            #Delete alias
                            sed -i '' -e "/${ALIAS}=.*/d" "${ALIAS_FILE}"
                        fi
                    fi
                else
                    printf "Alias name is required.\n"
                    return 81
                fi
            else
                printf "list, set or delete action must be provided.\n"
                return 80
            fi
        else
            printf "The ${PROJ_NAME} project doesn't exist in directory ${PROJ_DIR}.\n"
            return 65
        fi
    else
        printf "A project name is required to work with aliases.  Use '${PROGRAM_NAME} help alias' for help with the alias command.\n"
        return 64
    fi
}

command_alias_help(){
    printf "USAGE\n"
    printf "   ${PROGRAM_NAME} alias list|set|delete <project_name> [<alias> [<aem_instance_name>...]]\n"
    printf "\n"
    printf "DESCRIPTION\n"
    printf "   The 'alias' command is used to manage aliases for starting/stopping multiple AEM instances.\n"
}

command_alias_help_short(){
    printf "Manages aliases for starting/stopping multiple AEM instances.\n"
}
