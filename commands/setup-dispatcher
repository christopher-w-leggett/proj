#!/bin/bash

_setup_dispatcher_darwin_check(){
    local PROJ_DIR="${1}"
    local STATUS=0

    # Verify current user
    if ! id -Gn | grep -q -w admin; then
        printf "%s\n" "Current user must be an administrator to setup dispatcher."
        STATUS=83
    fi

    # Verify apachectl command exists
    if ! which apachectl > /dev/null; then
        printf "Failed to locate apachectl command.\n"
        STATUS=83
    fi

    local APACHE_CONF_DIR=$(get_config "${PROJ_DIR}" "aem.dispatcher.conf.dir" "/etc/apache2/other")
    if [ ! -d "${APACHE_CONF_DIR}" ]; then
        printf "Failed to locate ${APACHE_CONF_DIR} directory.\n"
        STATUS=83
    fi

    if [ ! -f "/etc/hosts" ]; then
        printf "Failed to locate /etc/hosts file.\n"
        STATUS=83
    fi

    return ${STATUS}
}

_setup_dispatcher_darwin(){
    # Grab parameters
    local DISPATCHER_MODULE_PATH="${1}"
    local PROJ_NAME="${2}"
    local PROJ_DIR=$(project_directory "${PROJ_NAME}")

    # Ask for user password
    local USER_PASS=""
    local PASS_INPUT_MESSAGE="Your password is required to setup dispatcher as elevated permissions are required for certain tasks.  Please provide your password to continue."
    while [[ "" == "${USER_PASS}" ]]; do
        printf "%s\n" "${PASS_INPUT_MESSAGE}"
        read -s -p "Password: " USER_PASS
        printf "\n"

        if ! printf "%s\n" "${USER_PASS}" | sudo -S -k whoami >/dev/null 2>/dev/null; then
            PASS_INPUT_MESSAGE="Invalid password."
            USER_PASS=""
        fi
    done

    # Gather AEM instance names
    local AEM_INSTANCE_NAMES=()
    if [ -d "${PROJ_DIR}/sites/aem" ]; then
        while IFS=  read -r -d $'\0'; do
            AEM_INSTANCE_NAMES+=(`basename "${REPLY}"`)
        done < <(find "${PROJ_DIR}/sites/aem" -mindepth 1 -maxdepth 1 -type d -print0)
    fi

    if [ ${#AEM_INSTANCE_NAMES[@]} -ne 0 ]; then
        local INSTANCE_NAME=""
        prompt_options INSTANCE_NAME "Which AEM instance would you like this apache dispatcher for?" "" ${AEM_INSTANCE_NAMES[@]}

        local DOMAIN_NAME="${INSTANCE_NAME}.${PROJ_NAME}.com"
        printf "What domain name do you want to use for this dispatcher instance [${DOMAIN_NAME}]?\n"
        read USER_DEFINED_DOMAIN_NAME
        if [[ -n "${USER_DEFINED_DOMAIN_NAME}" && "" != "${USER_DEFINED_DOMAIN_NAME}" ]]; then
            DOMAIN_NAME="${USER_DEFINED_DOMAIN_NAME}"
        fi

        # Find port of AEM instance
        local PORT=`grep '^\tCQ_PORT=[0-9]*$' "${PROJ_DIR}/sites/aem/${INSTANCE_NAME}/crx-quickstart/bin/start" | awk -F = '{print $2}'`

        # Create directories (sites project directory should exist from init command.)
        if [ ! -d "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}" ]; then
            printf "Creating ${PROJ_DIR}/sites/apache/${INSTANCE_NAME}.\n"
            mkdir -p "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}"
        fi
        if [ ! -d "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/conf" ]; then
            printf "Creating ${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/conf.\n"
            mkdir "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/conf"
        fi
        if [ ! -d "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/log" ]; then
            printf "Creating ${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/log.\n"
            mkdir "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/log"
        fi
        if [ ! -d "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/www" ]; then
            printf "Creating ${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/www.\n"
            mkdir "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/www"
            chmod 775 "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/www"
            printf "%s\n" "${USER_PASS}" | sudo -S -k chgrp _www "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/www" 2>/dev/null
        fi

        # Process string replacements
        local DISPATCHER_MODULE_REPLACE="${DISPATCHER_MODULE_PATH//\//\\/}"
        local PROJ_DIR_REPLACE="${PROJ_DIR//\//\\/}"

        # Setup site httpd configuration
        local APACHE_CONF_DIR=$(get_config "${PROJ_DIR}" "aem.dispatcher.conf.dir" "/etc/apache2/other")
        local APACHE_CONF_FILE="${APACHE_CONF_DIR}/${PROJ_NAME}_${INSTANCE_NAME}.conf"
        if [ ! -f "${APACHE_CONF_FILE}" ]; then
            printf "Copying site httpd configuration ${PROGRAM_DIR}/templates/disp.conf.template to ${APACHE_CONF_FILE}.\n"
            printf "%s\n" "${USER_PASS}" | sudo -S -k cp "${PROGRAM_DIR}/templates/disp.conf.template" "${APACHE_CONF_FILE}" 2>/dev/null

            # Configure site httpd configuration
            printf "%s\n" "${USER_PASS}" | sudo -S -k sed -i '' -e "s/<disp-module>/${DISPATCHER_MODULE_REPLACE}/g" "${APACHE_CONF_FILE}" 2>/dev/null
            printf "%s\n" "${USER_PASS}" | sudo -S -k sed -i '' -e "s/<site-domain>/${DOMAIN_NAME}/g" "${APACHE_CONF_FILE}" 2>/dev/null
            printf "%s\n" "${USER_PASS}" | sudo -S -k sed -i '' -e "s/<site-name>/${INSTANCE_NAME}/g" "${APACHE_CONF_FILE}" 2>/dev/null
            printf "%s\n" "${USER_PASS}" | sudo -S -k sed -i '' -e "s/<project-dir>/${PROJ_DIR_REPLACE}/g" "${APACHE_CONF_FILE}" 2>/dev/null
        fi

        # Setup dispatcher.any file
        if [ ! -f "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/conf/dispatcher.any" ]; then
            printf "Copying dispatcher configuration ${PROGRAM_DIR}/templates/dispatcher.any.template to ${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/conf/dispatcher.any.\n"
            printf "%s\n" "${USER_PASS}" | sudo -S -k cp "${PROGRAM_DIR}/templates/dispatcher.any.template" "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/conf/dispatcher.any" 2>/dev/null

            # Configure site httpd configuration
            printf "%s\n" "${USER_PASS}" | sudo -S -k sed -i '' -e "s/<site-domain>/${DOMAIN_NAME}/g" "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/conf/dispatcher.any" 2>/dev/null
            printf "%s\n" "${USER_PASS}" | sudo -S -k sed -i '' -e "s/<site-name>/${INSTANCE_NAME}/g" "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/conf/dispatcher.any" 2>/dev/null
            printf "%s\n" "${USER_PASS}" | sudo -S -k sed -i '' -e "s/<site-port>/${PORT}/g" "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/conf/dispatcher.any" 2>/dev/null
            printf "%s\n" "${USER_PASS}" | sudo -S -k sed -i '' -e "s/<project-dir>/${PROJ_DIR_REPLACE}/g" "${PROJ_DIR}/sites/apache/${INSTANCE_NAME}/conf/dispatcher.any" 2>/dev/null
        fi

        # Append domain to hosts file if it doesn't exist.
        local DOMAIN_PATTERN="${DOMAIN_NAME//./\.}"
        if grep "${DOMAIN_PATTERN}" "/etc/hosts" >/dev/null; then
            printf 'Domain already found in hosts file.\n'
        else
            local DOMAIN_ENTRY="127.0.0.1 ${DOMAIN_NAME}"
            printf "%s\n" "${USER_PASS}" | sudo -S -k -- sh -c "printf '${DOMAIN_ENTRY}\n' >> /etc/hosts" 2>/dev/null
        fi

        # Cycle Apache
        printf "%s\n" "${USER_PASS}" | sudo -S -k apachectl -k graceful 2>/dev/null
    else
        printf "Unable to setup dispatcher module.  No AEM instances exist.  Please setup an AEM instance first.\n"
        return 81
    fi
}

command_setup-dispatcher(){
    local PROJ_NAME="${1}"
    shift

    if [[ -n "${PROJ_NAME}" && "" != "${PROJ_NAME}" ]]; then
        local PROJ_DIR=$(project_directory "${PROJ_NAME}")

        if [ -d "${PROJ_DIR}" ]; then
            local DISTRO="$(uname | tr '[:upper:]' '[:lower:]')"
            if declare -f "_setup_dispatcher_${DISTRO}_check" > /dev/null; then
                if "_setup_dispatcher_${DISTRO}_check" "${PROJ_DIR}"; then
                    #Grab any configured default dispatcher module
                    local DEFAULT_DISPATCHER_MODULE_PATH=$(get_config "${PROJ_DIR}" "aem.default.dispatcher.module" "")

                    local SETUP_DISPATCHER="Yes"
                    while [ "Yes" == "${SETUP_DISPATCHER}" ]; do
                        #Grab user input for dispatcher module location
                        if [[ -z "${DEFAULT_DISPATCHER_MODULE_PATH}" || "" == "${DEFAULT_DISPATCHER_MODULE_PATH}" ]]; then
                            printf "Provide path to the dispatcher http module:\n"
                        else
                            printf "Provide path to the dispatcher http module [${DEFAULT_DISPATCHER_MODULE_PATH}]:\n"
                        fi
                        local DISPATCHER_MODULE_PATH=""
                        read DISPATCHER_MODULE_PATH

                        #If no module specified, use default
                        if [[ -z "${DISPATCHER_MODULE_PATH}" || "" == "${DISPATCHER_MODULE_PATH}" || ! -f "${DISPATCHER_MODULE_PATH}" ]]; then
                            DISPATCHER_MODULE_PATH="${DEFAULT_DISPATCHER_MODULE_PATH}"
                        fi

                        # Setup dispatcher if we have all necessary information
                        if [[ -n "${DISPATCHER_MODULE_PATH}" && "" != "${DISPATCHER_MODULE_PATH}" && -f "${DISPATCHER_MODULE_PATH}" ]]; then
                            #Set default module to last selected
                            DEFAULT_DISPATCHER_MODULE_PATH="${DISPATCHER_MODULE_PATH}"

                            "_setup_dispatcher_${DISTRO}" "${DISPATCHER_MODULE_PATH}" "${PROJ_NAME}"
                            local SETUP_STATUS=$?
                            if [ ${SETUP_STATUS} -ne 0 ]; then
                                return ${SETUP_STATUS}
                            fi
                        else
                            printf "No dispatcher http module provided, unable to setup AEM.\n"
                            return 80
                        fi

                        #Ask user if they want to setup another instance
                        prompt_options SETUP_DISPATCHER "Would you like to setup another apache dispatcher instance?" "No" "Yes" "No"
                    done
                else
                    printf "Apache doesn't appear to be installed or expected directory structure doesn't exist.\n"
                    return 83
                fi
            else
                printf "Setting up dispatcher on $(uname) not supported.\n"
                return 82
            fi
        else
            printf "The ${PROJ_NAME} project doesn't exists in directory ${PROJ_DIR}.  Please use '${PROGRAM_NAME} init ${PROJ_NAME}' to initialize the project.\n"
            return 65
        fi
    else
        printf "A project name is required to setup the Apache Dispatcher in the project directory.  Use '${PROGRAM_NAME} help setup-dispatcher' for help with the setup-dispatcher command.\n"
        return 64
    fi
}

command_setup-dispatcher_help(){
    printf "USAGE\n"
    printf "   ${PROGRAM_NAME} setup-dispatcher <project_name>\n"
    printf "\n"
    printf "DESCRIPTION\n"
    printf "   The 'setup-dispatcher' command is used to configure the Apache Dispatcher for one or more AEM instances in an existing project.\n"
}

command_setup-dispatcher_help_short(){
    printf "Configures Apache Dispatcher for one or more AEM instances.\n"
}
